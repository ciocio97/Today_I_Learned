<운영 체제의 특징>
--운영 체제 (OS: Operating System)이란?
    --컴퓨터 시스템과 사용자 간의 인터페이스 기능을 담당.
    --사용자가 컴퓨터 시스템을 쉽게 사용할 수 있도록 인터페이스를 제공해주는 소프트웨어.

        --운영 체제 구조

            --쉘 (Shell) = 인터페이스(GUI)
                
                --운영 체제의 가장 바깥 부분에 위치해서 사용자 명령에 대한 처리를 담당.
                --사용자가 커널을 보다 편리하게 사용할 수 있게 함

            --커널 (Kernel)

                --하드웨어와 관련된 가장 내부적인 역할을 담당.
                --운영체제의 핵심적인 기능들이 모여있음.

        --운영 체제의 종류

            --윈도즈(Windows) 운영 체제
                --마이크로프트사가 개발한 운영체제
                --MS-DOS의 멀티태스킹 기능 + GUI 환경을 제공

            --유닉스(Unix) 계열 운영 체제
                --교육 및 연구 기관에서 사용되는, 범용 다중 사용자 방식의 시분할 운영체제
                    
                    --유닉스 계열 운영 체제 특징
                        --대화식 운영 체제 기능
                        --다중 작업 기능(멀티태스킹)
                        --다중 사용자 기능
                        --이식성
                        --계층적 트리 구조 파일 시스템

                    --01 리눅스(Linux) 운영 체제
                        --유닉스 기반으로 개발된 오픈 소스 기반의 운영체제 

                    --02 맥(Mac) 운영 체제
                        --유닉스 기반으로 애플이 개발한 GUI기반 운영체제

                    --03 안드로이드(Android) 운영 체제
                        --휴대용 장치를 위한 운영 체제와 미들 웨어, UI, 표준 응용 프로그램을 포함하고 있는 운영체제

--운영 체제 기본 명령어

    --운영 체제 제어 방법

        --CLI: Command Line Interface / 사용자가 직접 명령어를 입력하여 컴퓨터에 직접 명령을 내리는 방식 
        --GUI: Graphic User Interface / 마우스로 화면을 클릭하여 그래픽 위주로 컴퓨터를 제어하는 방식

    --윈도즈(Windows) 운영 체제의 기본 명령어

    --유닉스(Unix)/리눅스(Linux) 운영 체제의 기본 명령어

            --접근 제어 매커니즘 { R:읽거나 W:쓰거나 X:실행 }

                --User: 파일을 사용하고 있는 사용자                                      { R:4 W:2 X:1 }
                --Group: 소유자를 제외하고 파일과 같은 그룹에 속해있는 모든 사용자 모임     { R:4 W:2 X:1 }
                --Other: 그 외 사용자                                                   { R:4 W:2 X:1 }

            --접근 권한 변경 (chmod)

                ex.chmod o-w seung.c  -> seung.c에 대한 other의-쓰기권한 제거
                ex.chmod 664 seung.c  -> seung.c의 접근권한은 664(RW-RW-R)
                ex.chmod go-w seung.c -> seung.c의 group,other에-쓰기권한 제거
                ex.chmod a=rw seung.c -> seung.c의 모든 사용자에게=읽기,쓰기권한 설정
                ex.chmod g+w, o-x seung.c  -> seung.c의 group에-읽기권한 추가, other에 실행권한 제거

                --대상: u(user) / g(group) / o(other) / a(all)
                --연산자: +(추가) / -(제거) / =(지정)
                --접근 권한: r(읽기) / w(쓰기) / x(실행)

--운영 체제 핵심 기능

    --01 메모리 관리: 프로그램의 실행이 종료될 때까지 메모리를 가용한 상태로 유지 및 관리 기능

        --메모리 관리 기법

            --반입 기법: 주기억장치에 적재할 다음 프로세스의 반입 시기를 결정하는 기법
                --요구 반입 기법
                --예상 반입 기법

            --배치 기법: 프로세스를 주기억장치의 어느 위치에 저장할 것인지 결정하는 기법
                --최초 적합(First-fit) : 프로세스가 적재될 수 있는 가용 공간 중 제일 첫번째 분할에 할당하는 방식
                --최적 적합(Best-fit)  : 가용 공간 중에서 가장 크기가 비슷한 곳에 프로세스를 적재하는 방식 
                --최악 적합(Worst-fit) : 프로세스의 가용 공간들 속에서 가장 큰 공간에 할당하는 방식

    --02 프로세스 관리: '일시 중지 및 재실행' '동기화' '통신' '교착상태 처리' '프로세스 생성 삭제'

        --프로세스 상태 전이

            --생성(Create)   : 사용자에 의해 프로세스가 생성된 상태 
            --준비(Ready)    : CPU를 할당받을 수 있는 상태 ----(디스패치)----> 실행
                               준비 리스트 -> (우선순위부여O)                                        <----(웨이크업)---- 대기 
                               가장 높은 우선 순위를 갖는 프로세스가 다음 순서에 CPU를 할당 받음        <----(타이머 런아웃)-- 실행  
            --실행(Running)  : 프로세스가 CPU를 할당받아 동작 중인 상태 ---(블록)---> 대기
            --대기(Waiting)  : 대기 리스트 -> (우선순위부여X) 
            --완료(Complete) : 프로세스가 CPU를 할당받아 주어진 시간 내에 완전히 수행을 종료한 상태

                --디스패치? 준비 상태에 있는 여러 프로세스 중 실행될 프로세스 선정하여 CPU 할당
                --웨이크 업? 어느 순간 입출력이 종료되면, 대기 상태의 프로세스에게 입출력 종료 사실을 알리고 준비 상태로 전이
                --타이머 런 아웃? CPU할당받은 프로세스는 일정 시간 초과되면 스케줄러에 의해 CPU반납 후 준비 상태로 전이
                --블록? 실행 상태에 있는 프로세스가 할당된 시간 초과하기 이전에 기타 사건이 발생하면 CPU를 스스로 반납하고
                        입출력이 완료될 떄까지 대기 상태로 전이

        --프로세스 스케줄링
            --프로세스 스케줄링이란?
                --CPU를 사용하려고 하는 프로세스들 사이의 우선 순위를 관리하는 작업
                -- 처리율과 CPU 이용률을 증가시키고, 오버헤드, 응답시간, 반환시간, 대기시간을 최소화시키기 위한 기법

            --프로세스 스케줄링 유형

                --선점형 스케줄링 (CPU 선점 O) 
                    --하나의 프로세스가 CPU를 차지하고 있을 때, 
                      우선 순위가 높은 다른 프로세스가 현재 프로세스를 중단시키고 CPU를 점유하는 스케줄링 방식

                        --알고리즘

                            --라운드 로빈(RR): 시간 할당량 (O) 
                                              시간할당량 끝나면 가차없이 아웃! 그 다음것들 데리고 와서 긴 것보다 빨리빨리 끝내벌임
                            --SRT: Shortest Remaining Time
                                            가장 짧은 시간이 소요되는 프로세스를 먼저 수행하는 방식.
                                            남은 처리 시간이 더 짧다고 판단되는 프로세스가 준비 큐에 생기면 언제라도 선점된다 !
                            --다단계 큐
                            --다단계 피드백 큐

                --비선점형 스케줄링 (CPU 선점 X)
                    --한 프로세스가 CPU를 할당받으면 작업 종료 후 CPU 반환 시까지 다른 프로세스는 CPU 점유 불가능한 스케줄링 방식

                        --알고리즘

                            --우선순위
                            --기한부
                            --FCFS(FIFO): First Come First Service/First In First Out 
                                          쭉쭉쭉쭉
                            --SJF: Shortest Job First 
                                   우선순위가 높은 프로세스가 자원을 선점하면, 그 프로세스가 종료할 때까지 자원을 독점하는 방식
                            --HRN

<네트워크 기초 활용하기>
<기본 개발환경 구축하기>